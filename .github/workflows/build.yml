name: Build Images
on:
  - push
  - pull_request
jobs:
  find-cfs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Discover Containerfiles
        run: echo cf_matrix=$(ci/discover_cfs.sh) >> $GITHUB_ENV
      - name: Set matrix to discovered Containerfiles
        id: set-matrix
        run: echo '::set-output name=matrix::${{ env.cf_matrix }}'
      - name: Echo matrix variable
        run: echo '${{ steps.set-matrix.outputs.matrix }}'
      - name: Parse matrix using fromJSON
        run: echo ${{ fromJSON(steps.set-matrix.outputs.matrix) }}

  build-and-push:
    needs: find-cfs
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: quay.io
      IMAGE_USER: rydrew
    strategy:
      matrix: ${{ fromJSON(needs.find-cfs.outputs.matrix) }}
      fail-fast: false
    name: ${{ matrix.image_name }} (${{ matrix.arch }})
    steps:
      - uses: actions/checkout@v2
      - name: Echo origin URL and current branch
        run: |
            echo "Current branch: `git branch --show-current`"
            echo "Origin URL(s): `git remote get-url origin`"
      - name: Echo Matrix Permutation
        run: |
            echo "Containerfile: ${{ matrix.containerfile }}"
            echo "Image Name: ${{ matrix.image_name }}"
            echo "Tag Prefix: ${{ matrix.tag_prefix }}"
            echo "Arch: ${{ matrix.arch }}"
      - name: Build ${{ matrix.containerfile }}
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ matrix.image_name }}
          tags: ${{ matrix.tag_prefix }}${{ github.sha }}
          dockerfiles: ${{ matrix.containerfile }}
      - name: Push to registry
        if: ${{ success() }}
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_USER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Print image URL
        if: ${{ success() }}
        run: echo "Image pushed to ${{ steps.push-image.outputs.registry-paths }}"
