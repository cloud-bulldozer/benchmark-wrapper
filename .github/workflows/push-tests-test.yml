name: Push Test Images
on:
  workflow_dispatch:
jobs:
  push-cfs:
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - name: Install podman
        run: sudo apt update && sudo apt install -y podman
      - name: Download all built images
        run: |
            set -x
            base_url="https://api.github.com/repos"
            token_header="authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
            repo="${{ github.repository }}"
            run_id="1056706962"
            list_artifact_url="${base_url}/${repo}/actions/runs/${run_id}/artifacts"

            echo "Downloading artifacts for run with ID: ${run_id}"
            # List artifacts from the run
            artifact_json=`curl -s -H "${token_header}" "${list_artifact_url}"`
            echo "Got response: ${artifact_json"
            artifacts=`echo $artifact_json | jq -c '.artifacts[] | [.id,.name]'`
            echo "Got artifacts: $(echo $artifacts | jq)"

            for artifact in ${artifacts[@]}
            do
                id=`echo ${artifact} | jq -rc '.[0]'`
                name=`echo ${artifact} | jq -rc '.[1]'`
                echo "Downloading ${name} (ID: ${id})"

                # Get download_url, which is in the location header
                download_url=`curl -s -I -X GET -H "${token_header}" \
                              "${base_url}/${repo}/actions/artifacts/${id}/zip" \
                              | grep "location: " | sed 's/location: //'`
                # Remove carriage returns
                download_url="${download_url%$'\r'}"

                echo "Downloading from '${download_url}'"
                curl --output "${{ github.workspace }}/${name}.zip" "$download_url"
            done
            echo "Finished"
      - name: Display directory structure
        run: |
            ls -R ${{ env.DOWNLOAD_PATH }}
      - name: Login to quay.io
        run: >-
            podman login --password ${{ secrets.REGISTRY_PASSWORD }}
            --username ${{ secrets.REGISTRY_AUTH_USER }} quay.io
      - name: Load and push images
        run: |
            image_zips=(`find ${{ env.DOWNLOAD_PATH }} -name '*.zip'`)

            for image_zip_path in ${image_zips[*]}
            do
                unzip $image_zip_path -q ${{ env.DOWNLOAD_PATH }}
                image_tar_path="${image_zip_path%%zip}tar"
                image_name=`echo $image_archive_name | cut -d'.' -f1`
                image_tag=`echo $image_archive_name | cut -d'.' -f2`

                podman load -i $image_tar_path
                podman image push quay.io/${{ secrets.REGISTRY_USER }}/$image_name:$image_tag
                echo "Pushed ${image_name}:${image_tag}!"
            done
